---
import DOMPurify from "isomorphic-dompurify";
import {marked} from "marked";
import {getCollection, getEntry} from 'astro:content';
import Layout from "../../../layouts/Layout.astro";
import slugify from "slugify";
import EventCard from "../../../components/EventCard.astro";
import {Share, MoveLeft} from  '@lucide/astro';
import CopyUrlButton from "../../../components/CopyUrlButton.astro";
export async function getStaticPaths() {
  const weeks = await getCollection('weeks');
  let output = [];

  for (let weekEntry of weeks) {
    for (let event of weekEntry.data.events) {
      output.push({
        params: {
          week: weekEntry.id,
          slug: slugify(event.title, {lower: true, strict: true})
        }
      });
    }
  }

  console.log(output)
  return output;
}

const {slug, week} = Astro.params;

const renderHTMLFromMarkdown = (markdownText) =>
  DOMPurify.sanitize(marked.parse(markdownText));

// To działa, bo Astro pozwala na async w frontmatter po `getStaticPaths`
const entry = await getEntry('weeks', week);
const event = entry.data.events.find(
  (e) => slugify(e.title, {lower: true, strict: true}) === slug
);
const eventSlug = slugify(event.title, {lower: true, strict: true})

if (!event) {
  throw new Error(`Event not found for slug: ${slug} in week: ${week}`);
}
---

<style lang="scss">
  h1 {
    text-align: center;
  }

  .wrapper {
    display: flex;
    flex-direction: column;
    gap: 64px;
    flex-wrap: nowrap;
    align-items: center;
      max-width: 80ch;
      margin: 0 auto;
  }


  .back {
    display: block;
  }

  .actions{
      display: flex;
      gap: 16px;
      align-items: flex-end;
      justify-content: space-between;
      width: 100%;

  }

  button{
      display: flex;
      gap: 8px;
  }


</style>
<Layout>
    <h1>{entry.data.title}</h1>
    <div class="wrapper">
    <div class="actions">
        <a href={`/${entry.id}#${eventSlug}`} class="back">
            <button class="outline"><MoveLeft />Lista wydarzeń</button>
        </a>
            <CopyUrlButton />
    </div>
        <EventCard {...event} slug={slug}/>
    </div>
</Layout>
